
8.DAC.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001ec  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000030  08000394  08000394  00010394  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080003c4  080003c4  000103cc  2**0
                  CONTENTS
  4 .ARM          00000000  080003c4  080003c4  000103cc  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003c4  080003cc  000103cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003c4  080003c4  000103c4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080003c8  080003c8  000103c8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000103cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000103cc  2**0
                  CONTENTS
 10 .bss          00000020  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000020  20000020  00020000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  000103cc  2**0
                  CONTENTS, READONLY
 13 .debug_info   000004a1  00000000  00000000  000103f6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000012c  00000000  00000000  00010897  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000050  00000000  00000000  000109c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000038  00000000  00000000  00010a18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000151ad  00000000  00000000  00010a50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000004b1  00000000  00000000  00025bfd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000769ef  00000000  00000000  000260ae  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0009ca9d  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000084  00000000  00000000  0009caf0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	0800037c 	.word	0x0800037c

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	0800037c 	.word	0x0800037c

080001e8 <delayms>:
//PA4 -Pin 20 (x5), PC6 -pin 37 (x8)

#include "stm32f405xx.h"
uint32_t analog;
void delayms(uint32_t dly)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b085      	sub	sp, #20
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	6078      	str	r0, [r7, #4]
  uint32_t i,j=0;
 80001f0:	2300      	movs	r3, #0
 80001f2:	60bb      	str	r3, [r7, #8]
  for(i=0;i<dly;i++)
 80001f4:	2300      	movs	r3, #0
 80001f6:	60fb      	str	r3, [r7, #12]
 80001f8:	e00c      	b.n	8000214 <delayms+0x2c>
  for(j=0;j<16000;j++);
 80001fa:	2300      	movs	r3, #0
 80001fc:	60bb      	str	r3, [r7, #8]
 80001fe:	e002      	b.n	8000206 <delayms+0x1e>
 8000200:	68bb      	ldr	r3, [r7, #8]
 8000202:	3301      	adds	r3, #1
 8000204:	60bb      	str	r3, [r7, #8]
 8000206:	68bb      	ldr	r3, [r7, #8]
 8000208:	f5b3 5f7a 	cmp.w	r3, #16000	; 0x3e80
 800020c:	d3f8      	bcc.n	8000200 <delayms+0x18>
  for(i=0;i<dly;i++)
 800020e:	68fb      	ldr	r3, [r7, #12]
 8000210:	3301      	adds	r3, #1
 8000212:	60fb      	str	r3, [r7, #12]
 8000214:	68fa      	ldr	r2, [r7, #12]
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	429a      	cmp	r2, r3
 800021a:	d3ee      	bcc.n	80001fa <delayms+0x12>
}
 800021c:	bf00      	nop
 800021e:	bf00      	nop
 8000220:	3714      	adds	r7, #20
 8000222:	46bd      	mov	sp, r7
 8000224:	bc80      	pop	{r7}
 8000226:	4770      	bx	lr

08000228 <main>:
int main(void) {
 8000228:	b580      	push	{r7, lr}
 800022a:	b082      	sub	sp, #8
 800022c:	af00      	add	r7, sp, #0
int i;
 const static int sineWave[] =
        {2048,3071,3821,4095,3821,3071,2048,1024,274,0,274,1024};

    //PA4 in Analog mode
    RCC->AHB1ENR |=  (1<<0);	 //enable GPIOA clock Datasheet 19
 800022e:	4b26      	ldr	r3, [pc, #152]	; (80002c8 <main+0xa0>)
 8000230:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000232:	4a25      	ldr	r2, [pc, #148]	; (80002c8 <main+0xa0>)
 8000234:	f043 0301 	orr.w	r3, r3, #1
 8000238:	6313      	str	r3, [r2, #48]	; 0x30
    GPIOA->MODER &= ~(3<<8);    //clear pin mode for PA4 DAC PIN
 800023a:	4b24      	ldr	r3, [pc, #144]	; (80002cc <main+0xa4>)
 800023c:	681b      	ldr	r3, [r3, #0]
 800023e:	4a23      	ldr	r2, [pc, #140]	; (80002cc <main+0xa4>)
 8000240:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8000244:	6013      	str	r3, [r2, #0]
    GPIOA->MODER |=  (3<<8);    //PA4 in analog mode
 8000246:	4b21      	ldr	r3, [pc, #132]	; (80002cc <main+0xa4>)
 8000248:	681b      	ldr	r3, [r3, #0]
 800024a:	4a20      	ldr	r2, [pc, #128]	; (80002cc <main+0xa4>)
 800024c:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8000250:	6013      	str	r3, [r2, #0]

//PC6 IN ANALOG MODE
    RCC->AHB1ENR |=  (1<<2);	            /* enable GPIOC clock */
 8000252:	4b1d      	ldr	r3, [pc, #116]	; (80002c8 <main+0xa0>)
 8000254:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000256:	4a1c      	ldr	r2, [pc, #112]	; (80002c8 <main+0xa0>)
 8000258:	f043 0304 	orr.w	r3, r3, #4
 800025c:	6313      	str	r3, [r2, #48]	; 0x30
    GPIOC->MODER &= ~(3<<12);    /* clear pin mode for PC6 LED RM 281*/
 800025e:	4b1c      	ldr	r3, [pc, #112]	; (80002d0 <main+0xa8>)
 8000260:	681b      	ldr	r3, [r3, #0]
 8000262:	4a1b      	ldr	r2, [pc, #108]	; (80002d0 <main+0xa8>)
 8000264:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8000268:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |=  (3<<12);    //PC6 in analog mode
 800026a:	4b19      	ldr	r3, [pc, #100]	; (80002d0 <main+0xa8>)
 800026c:	681b      	ldr	r3, [r3, #0]
 800026e:	4a18      	ldr	r2, [pc, #96]	; (80002d0 <main+0xa8>)
 8000270:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
 8000274:	6013      	str	r3, [r2, #0]

    /* setup DAC */
    RCC->APB1ENR |= (1 << 29);    //Enable DAC clock	RM 183
 8000276:	4b14      	ldr	r3, [pc, #80]	; (80002c8 <main+0xa0>)
 8000278:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800027a:	4a13      	ldr	r2, [pc, #76]	; (80002c8 <main+0xa0>)
 800027c:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8000280:	6413      	str	r3, [r2, #64]	; 0x40
    DAC->CR |= (1<<0);             // Enable DAC Rm 445
 8000282:	4b14      	ldr	r3, [pc, #80]	; (80002d4 <main+0xac>)
 8000284:	681b      	ldr	r3, [r3, #0]
 8000286:	4a13      	ldr	r2, [pc, #76]	; (80002d4 <main+0xac>)
 8000288:	f043 0301 	orr.w	r3, r3, #1
 800028c:	6013      	str	r3, [r2, #0]

    while(1) {
        for (i = 0; i < sizeof(sineWave)/sizeof(int); i++)
 800028e:	2300      	movs	r3, #0
 8000290:	607b      	str	r3, [r7, #4]
 8000292:	e015      	b.n	80002c0 <main+0x98>
        {

            DAC->DHR12R1 = sineWave[i]; /* write value of sinewave to DAC RM448*/
 8000294:	4a10      	ldr	r2, [pc, #64]	; (80002d8 <main+0xb0>)
 8000296:	687b      	ldr	r3, [r7, #4]
 8000298:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800029c:	4b0d      	ldr	r3, [pc, #52]	; (80002d4 <main+0xac>)
 800029e:	609a      	str	r2, [r3, #8]

            DAC->SWTRIGR |=(1<<0);// Trigger ch1.
 80002a0:	4b0c      	ldr	r3, [pc, #48]	; (80002d4 <main+0xac>)
 80002a2:	685b      	ldr	r3, [r3, #4]
 80002a4:	4a0b      	ldr	r2, [pc, #44]	; (80002d4 <main+0xac>)
 80002a6:	f043 0301 	orr.w	r3, r3, #1
 80002aa:	6053      	str	r3, [r2, #4]
			analog=DAC->DHR12R1 ;//Check variable in Live expression-Debug mode
 80002ac:	4b09      	ldr	r3, [pc, #36]	; (80002d4 <main+0xac>)
 80002ae:	689b      	ldr	r3, [r3, #8]
 80002b0:	4a0a      	ldr	r2, [pc, #40]	; (80002dc <main+0xb4>)
 80002b2:	6013      	str	r3, [r2, #0]
            delayms(20);
 80002b4:	2014      	movs	r0, #20
 80002b6:	f7ff ff97 	bl	80001e8 <delayms>
        for (i = 0; i < sizeof(sineWave)/sizeof(int); i++)
 80002ba:	687b      	ldr	r3, [r7, #4]
 80002bc:	3301      	adds	r3, #1
 80002be:	607b      	str	r3, [r7, #4]
 80002c0:	687b      	ldr	r3, [r7, #4]
 80002c2:	2b0b      	cmp	r3, #11
 80002c4:	d9e6      	bls.n	8000294 <main+0x6c>
 80002c6:	e7e2      	b.n	800028e <main+0x66>
 80002c8:	40023800 	.word	0x40023800
 80002cc:	40020000 	.word	0x40020000
 80002d0:	40020800 	.word	0x40020800
 80002d4:	40007400 	.word	0x40007400
 80002d8:	08000394 	.word	0x08000394
 80002dc:	2000001c 	.word	0x2000001c

080002e0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002e0:	480d      	ldr	r0, [pc, #52]	; (8000318 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002e2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002e4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002e8:	480c      	ldr	r0, [pc, #48]	; (800031c <LoopForever+0x6>)
  ldr r1, =_edata
 80002ea:	490d      	ldr	r1, [pc, #52]	; (8000320 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002ec:	4a0d      	ldr	r2, [pc, #52]	; (8000324 <LoopForever+0xe>)
  movs r3, #0
 80002ee:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002f0:	e002      	b.n	80002f8 <LoopCopyDataInit>

080002f2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002f2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002f4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002f6:	3304      	adds	r3, #4

080002f8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002f8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002fa:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002fc:	d3f9      	bcc.n	80002f2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002fe:	4a0a      	ldr	r2, [pc, #40]	; (8000328 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000300:	4c0a      	ldr	r4, [pc, #40]	; (800032c <LoopForever+0x16>)
  movs r3, #0
 8000302:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000304:	e001      	b.n	800030a <LoopFillZerobss>

08000306 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000306:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000308:	3204      	adds	r2, #4

0800030a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800030a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800030c:	d3fb      	bcc.n	8000306 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800030e:	f000 f811 	bl	8000334 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000312:	f7ff ff89 	bl	8000228 <main>

08000316 <LoopForever>:

LoopForever:
    b LoopForever
 8000316:	e7fe      	b.n	8000316 <LoopForever>
  ldr   r0, =_estack
 8000318:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800031c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000320:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000324:	080003cc 	.word	0x080003cc
  ldr r2, =_sbss
 8000328:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800032c:	20000020 	.word	0x20000020

08000330 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000330:	e7fe      	b.n	8000330 <ADC_IRQHandler>
	...

08000334 <__libc_init_array>:
 8000334:	b570      	push	{r4, r5, r6, lr}
 8000336:	4d0d      	ldr	r5, [pc, #52]	; (800036c <__libc_init_array+0x38>)
 8000338:	4c0d      	ldr	r4, [pc, #52]	; (8000370 <__libc_init_array+0x3c>)
 800033a:	1b64      	subs	r4, r4, r5
 800033c:	10a4      	asrs	r4, r4, #2
 800033e:	2600      	movs	r6, #0
 8000340:	42a6      	cmp	r6, r4
 8000342:	d109      	bne.n	8000358 <__libc_init_array+0x24>
 8000344:	4d0b      	ldr	r5, [pc, #44]	; (8000374 <__libc_init_array+0x40>)
 8000346:	4c0c      	ldr	r4, [pc, #48]	; (8000378 <__libc_init_array+0x44>)
 8000348:	f000 f818 	bl	800037c <_init>
 800034c:	1b64      	subs	r4, r4, r5
 800034e:	10a4      	asrs	r4, r4, #2
 8000350:	2600      	movs	r6, #0
 8000352:	42a6      	cmp	r6, r4
 8000354:	d105      	bne.n	8000362 <__libc_init_array+0x2e>
 8000356:	bd70      	pop	{r4, r5, r6, pc}
 8000358:	f855 3b04 	ldr.w	r3, [r5], #4
 800035c:	4798      	blx	r3
 800035e:	3601      	adds	r6, #1
 8000360:	e7ee      	b.n	8000340 <__libc_init_array+0xc>
 8000362:	f855 3b04 	ldr.w	r3, [r5], #4
 8000366:	4798      	blx	r3
 8000368:	3601      	adds	r6, #1
 800036a:	e7f2      	b.n	8000352 <__libc_init_array+0x1e>
 800036c:	080003c4 	.word	0x080003c4
 8000370:	080003c4 	.word	0x080003c4
 8000374:	080003c4 	.word	0x080003c4
 8000378:	080003c8 	.word	0x080003c8

0800037c <_init>:
 800037c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800037e:	bf00      	nop
 8000380:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000382:	bc08      	pop	{r3}
 8000384:	469e      	mov	lr, r3
 8000386:	4770      	bx	lr

08000388 <_fini>:
 8000388:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800038a:	bf00      	nop
 800038c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800038e:	bc08      	pop	{r3}
 8000390:	469e      	mov	lr, r3
 8000392:	4770      	bx	lr
